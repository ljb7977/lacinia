필드
======

필드는 GraphQL 데이터의 기본적인 구성 요소입니다.

:doc:`객체` 와 :doc:`인터페이스 <interfaces>` 는 필드로 이루어져 있습니다.
쿼리와 뮤테이션은 특별한 종류의 필드입니다.

**필드는 함수입니다**. 더 정확하게는, 필드는 어떤 데이터로부터 시작하여 (쿼리에서 주어진 필드 인자와 같은)
다른 세부 사항을 더하여, 전체 결과에 포함될 수 있는 새로운 데이터를 내어놓는 연산의 한 종류입니다.

필드 정의
----------------

필드 정의는 스키마에서 일어나며, 필드의 타입과 다른 세부 사항을 설명합니다.
필드 정의는 특정 키들을 가지는 맵입니다.

필드 타입
----------

필드 정의의 메인 키는 ``:type``이며, 필수적으로 있어야 합니다.
이는 필드 리졸버에 의해 반환될 수 있는 값의 타입이며, 타입 DSL로서 작성됩니다.


타입 DSL
---------

타입은 필드의 정수입니다. 타입은 스칼라 값(문자열이나 수와 같은 간단한 값)을 나타낼 수도, 
여러 필드로 구성된 객체를 나타낼 수도, 아니면 스칼라나 객체의 리스트를 나타낼 수도 있습니다.


스키마 속에서, 타입은 다음 중 하나가 될 수 있습니다.
- 객체, 인터페이스, 열거형, 공용형에 대응되는 키워드
- 스칼라 타입 (내장 혹은 스키마에서 정의한)
- 위의 것들의 non-nil 버전 ``(non-null X)``
- 위의 것들의 리스트 ``(list X)``

내장 스칼라 타입:

.. sidebar:: GraphQL 스펙

   :spec:`scalar types <Built-in-Scalars>` 을 읽어 보세요.

* String
* Float
* Int
* Boolean
* ID

.. sidebar:: 관습

  관습적으로 내장 스칼라 타입은 심벌로서 식별됩니다. (예: ``{:type String}``)
  그 외의 타입(객체, 인터페이스, 열거형, 공용형)은 키워드로서 식별됩니다. (예: ``{:type (list :character)}``)
  사실은 이 둘에는 차이가 없습니다. 내부적으로 모든 것은 컴파일된 스키마 속의 키워드로 변환됩니다.

필드 리졸버
--------------

``:resolve`` 키는 필드 리졸버 함수를 식별합니다. 필드 리졸버 함수는 실제 데이터를 내어 주는 데에 사용합니다.

이 데이터, 즉 *리졸브된 값*은 절대 클라이언트에게 직접적으로 반환되지 않습니다. 이는 GraphQL에서, 결과값을 만들기 위해
리졸브된 값에서 어떤 필드를 선택할지 (그리고 종종 이름을 바꾸라고) 클라이언트 쿼리가 지정하기 때문입니다. 

``:resolve``는 선택적입니다. 넣어 주지 않으면, 자신을 담는 필드의 리졸브된 값이 자신의 이름과 정확히 매치되는 키를 가지는 맵이라고 가정됩니다.
(자신을 담는 필드의 리졸브된 값 안에 자신의 이름과 같은 키가 있을 것이라고 가정합니다.)

필드 리졸버 함수는 :doc:`객체 정의<objects>`의 필드, :doc:`쿼리 정의<queries>`,
 :doc:`뮤테이션 정의<mutations>`에 지정할 수 있습니다.
:doc:`인터페이스 정의<interfaces>`의 필드에는 필드 리졸버 함수를 지정하면 안 됩니다.
만약 지정한다면 :resolve는 조용히 무시될 것입니다.

.. sidebar:: Field Resolvers

   :doc:`필드 리졸버 완전 설명<resolve/index>`을 참고하세요.

필드 리졸버는 자신이 포함된 필드, 객체, 쿼리, 뮤테이션의 리졸브된 값을 전달받습니다.

반환값의 타입은 스칼라 타입일수도, 구조화된 타입일수도 있으며, 필드의 ``:type``에 정의됩니다.

복합 타입(스칼라가 아닌)의 경우, 클라이언트 쿼리는 결과 맵에 반환될 필드의 중첩된 집합을 무조건 포함해야 합니다.
쿼리를 트리라고 보면, 이 트리의 모든 잎은 언제나 단순 스칼라 값이 될 것입니다.

인자
---------

필드는 ``:args`` 키로 인자를 정의할 수 있습니다. 이는 인자 이름과 인자 정의의 맵입니다.

필드는 어떤 데이터가 어떤 순서로 반환될지를 조작하기 위해 인자를 사용합니다.
예를 들어, 인자는 쿼리에 날짜나 가격 기준으로 범위를 설정하거나, 정렬 순서를 설정할 수 있습니다.

인자 정의에는 ``:type`` 값을 정의해야 하며, 선택적으로 ``:description``을 지정할 수 있습니다.
인자는 클라이언트로부터 필드에 전달된 명백한 값을 나타내므로, 리졸버를 가지지 않습니다.

인자는 또한 ``:default-value``를 가질 수 있습니다.
기본값은 요청에 해당 인자를 위한 값이 들어오지 않았을 때 필드 리졸버에 대신 들어갑니다.

쿼리에 명시되지 않은 인자가 기본값도 없다면, :doc:`필드 리졸버<resolve/index>`에 전달되는 인자 맵에서 생략될 것입니다.


설명
-----------

필드에는 ``:description`` 키가 포함될 수 있습니다. 그 값은 문자열이고, :doc:`인트로스펙션`을 통해 노출됩니다.

Deprecation (구식화?)
-----------

필드에는 ``:deprecated`` 키가 포함될 수 있습니다. 이는 이 필드가 :doc:`deprecated <deprecation>`되었다는 것을 나타냅니다.
